name: Validate merge request

on:
  pull_request:
    branches: [ master ]

env:
  MIN_COVERAGE: 20

jobs:
  unit-test:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.100
      - name: Install dependencies
        run: dotnet restore --nologo
      - name: Build
        run: |
          dotnet build --configuration Release --no-restore --nologo | tee ./log.txt
          grep '0 Warning(s)' ./log.txt

      - name: Generate version
        id: version_generator
        run: |
          dotnet new tool-manifest --force
          dotnet tool install Swashbuckle.AspNetCore.Cli --version 6.4.0
          dotnet swagger tofile --output api.json ./GhostNetwork.Content.Api/bin/Release/net6.0/GhostNetwork.Content.Api.dll api
          echo "::set-output name=version::$(grep -o '"version": "[^"]*' api.json | grep -o '[^"]*$')\n"

      - name: TTTESSSST
        run: echo "${{ steps.version_generator.outputs.version }}"

      - name: Test
        run: dotnet test --no-restore --nologo
      - name: Install dotCover
        run: dotnet tool install JetBrains.dotCover.GlobalTool -g
      - name: Calculate coverage
        run: dotnet dotcover test --dcReportType=XML --dcFilters=-:module=GhostNetwork.Content.Domain.UnitTest
      - name: Validate coverage
        run: |
          total=$(grep -o 'CoveragePercent="[^"]*"' -m 1 dotCover.Output.xml | cut -c 18-19)
          echo "Code Coverage: $total%"
          if [ $total -lt $MIN_COVERAGE ]; then exit 1; fi
          
  teeest:
    runs-on: ubuntu-20.04
    needs: unit-test

    steps:
      - name: TTTESSSST
        run: echo "${{ needs.unit-test.outputs.version }}"
