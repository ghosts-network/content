name: Release nuget http client

# on:
#   workflow_dispatch:
#     inputs:
#       version:
#         description: 'Version of nuget package'
#         required: true

on:
  push:
    branches: [ ci/nuget-package-automatization ]

env:
  PACKAGE_NAME: GhostNetwork.Content
  PACKAGE_REGISTRY: https://api.nuget.org/v3/index.json
  version: 2.7.1

jobs:
  generate-client:
    runs-on: ubuntu-20.04
    
    steps:
      - uses: actions/checkout@v2
      - name: Install generator
        run: npm install @openapitools/openapi-generator-cli
      - name: Run service instance
        run: docker-compose up -d
      - name: Run service instance
        run: docker-compose ps -a
      - name: Download swagger json
        run: curl http://localhost:5300/swagger/api/swagger.json -O
      - name: df
        run: |
          echo $(grep -o '"version": "[^"]*' swagger.json | grep -o '[^"]*$')
          echo $(https://api.nuget.org/v3-flatcontainer/GhostNetwork.Content/index.json | jq ".versions | last")


#       - name: generate-package
#         run: |
#           npx @openapitools/openapi-generator-cli generate -i http://localhost:5300/swagger/api/swagger.json \
#             -g csharp-netcore \
#             -o ./http-client \
#             --library httpclient \
#             --remove-operation-id-prefix \
#             --additional-properties=packageName=$PACKAGE_NAME \
#             --additional-properties=netCoreProjectFile=true
#       - uses: actions/setup-dotnet@v1
#         with:
#           dotnet-version: 6.0.100
#       - name: Create package
#         run: dotnet pack -p:PackageVersion=${{ github.event.inputs.version }} -o .
#         working-directory: ./http-client
#       - name: Publish package
#         run: dotnet nuget push $PACKAGE_NAME.${{ github.event.inputs.version }}.nupkg --source $PACKAGE_REGISTRY --api-key ${{ secrets.NUGET_KEY }}
#         working-directory: ./http-client
