name: Release nuget http client

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version of nuget package'
        required: true

env:
  PACKAGE_NAME: GhostNetwork.Content
  PACKAGE_REGISTRY: https://api.nuget.org/v3/index.json
  version: 2.7.1

jobs:
  generate-client:
    runs-on: ubuntu-20.04
    
    steps:
      - uses: actions/checkout@v2
      - name: Generate swagger json
        run: npm install @openapitools/openapi-generator-cli
      - name: Generate swagger json
        run: |
          dotnet new tool-manifest --force
          dotnet tool install Swashbuckle.AspNetCore.Cli --version 6.4.0
          dotnet build GhostNetwork.Content.Api/GhostNetwork.Content.Api.csproj -c Release -o ./build
          ls ./build -la
          dotnet swagger tofile --output swagger.json ./build/GhostNetwork.Content.Api.dll api
          ls -la
      - name: Build version
        run: |
          export CURRENT_BUILD_VERSION=$(grep -o '"version": "[^"]*' swagger.json | grep -o '[^"]*$' | awk -F "." '{print $1"."$2}')
          export LATEST_PUBLISHED_VERSION=$(curl https://api.nuget.org/v3-flatcontainer/GhostNetwork.Content/index.json | jq ".versions | last" | sed 's/\"//g' | awk -F "." '{print $1"."$2}')
          export HIGEST_VERSION=$(printf "$CURRENT_BUILD_VERSION\n$LATEST_PUBLISHED_VERSION" | sort -V | tail -1)
          echo "CURRENT_BUILD_VERSION=$CURRENT_BUILD_VERSION" >> $GITHUB_ENV
          echo "LATEST_PUBLISHED_VERSION=$LATEST_PUBLISHED_VERSION" >> $GITHUB_ENV
          echo "HIGEST_VERSION=$HIGEST_VERSION" >> $GITHUB_ENV
      - name: Test
        run: |
          echo ${{ env.CURRENT_BUILD_VERSION }}
          echo ${{ env.LATEST_PUBLISHED_VERSION }}
          echo ${{ env.HIGEST_VERSION }}

#       - name: generate-package
#         if: ${{ env.LATEST_PUBLISHED_VERSION != env.HIGEST_VERSION }}
#         run: |
#           npm install @openapitools/openapi-generator-cli
#           npx @openapitools/openapi-generator-cli generate -i http://localhost:5300/swagger/api/swagger.json \
#             -g csharp-netcore \
#             -o ./http-client \
#             --library httpclient \
#             --remove-operation-id-prefix \
#             --additional-properties=packageName=$PACKAGE_NAME \
#             --additional-properties=netCoreProjectFile=true
#       - uses: actions/setup-dotnet@v1
#         if: ${{ env.LATEST_PUBLISHED_VERSION != env.HIGEST_VERSION }}
#         with:
#           dotnet-version: 6.0.100
#       - name: Create package
#         if: ${{ env.LATEST_PUBLISHED_VERSION != env.HIGEST_VERSION }}
#         run: dotnet pack -p:PackageVersion=${{ github.event.inputs.version }} -o .
#         working-directory: ./http-client
#       - name: Publish package
#         if: ${{ env.LATEST_PUBLISHED_VERSION != env.HIGEST_VERSION }}
#         run: dotnet nuget push $PACKAGE_NAME.${{ github.event.inputs.version }}.nupkg --source $PACKAGE_REGISTRY --api-key ${{ secrets.NUGET_KEY }}
#         working-directory: ./http-client
